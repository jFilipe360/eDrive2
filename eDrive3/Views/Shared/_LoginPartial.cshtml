@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <!-- saudação sempre que houver sessão -->
        <li class="nav-item">
            @if (!User.IsInRole("Admin"))
            {
                <a class="nav-link text-dark"
                   asp-controller="Perfil"
                   asp-action="Details">
                    Olá, @User.Identity?.Name!
                </a>
            }
            else
            {
                <span class="nav-link text-dark">
                    Olá, @User.Identity?.Name!
                </span>
            }
        </li>

        <!-- link Criar User visível só para administradores -->
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark"
                   asp-controller="Admin"
                   asp-action="CreateUser">
                    Criar User
                </a>
            </li>
        }

        <!-- logout -->
        <li class="nav-item">
            <form class="form-inline"
                  asp-area="Identity"
                  asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home")">
                <button type="submit" class="nav-link btn btn-link text-dark">
                    Logout
                </button>
            </form>
        </li>
    }
    else
    {
        <!-- só Login quando não autenticado -->
        <li class="nav-item">
            <a class="nav-link text-dark"
               asp-area="Identity"
               asp-page="/Account/Login">
                Login
            </a>
        </li>
    }
</ul>
